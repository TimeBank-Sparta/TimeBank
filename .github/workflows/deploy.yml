name: Deploy to EC2 (Blue-Green)

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Define Tag
      id: define_tag
      run: echo "TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Build and Push Docker Images
      run: |
        services="gateway-service help-service notification-service review-service point-service user-service config-server eureka-server"
        for service in $services; do
          docker build -t your-repo/$service:${{ env.TAG }} -f $service/Dockerfile .
          docker push your-repo/$service:${{ env.TAG }}
        done

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/app
          echo "TAG=${{ env.TAG }}" > .env-tag
          source .env-tag

          # 새 이미지 태그로 docker-compose 실행
          docker-compose pull
          docker-compose -f docker-compose.yml up -d

          # 오래된 이미지 및 컨테이너 정리
          docker image prune -af

